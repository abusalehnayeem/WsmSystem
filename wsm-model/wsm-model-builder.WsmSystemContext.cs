//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 5/24/2022 6:06:01 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable disable

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;
using WsmSystem.Erp.Domain;

namespace WsmSystem.Erp.Infrastructure
{

    public  class WsmSystemContext : DbContext
    {

        public WsmSystemContext() :
            base()
        {
           
        }

        public WsmSystemContext(DbContextOptions<WsmSystemContext> options) :
            base(options)
        {
           
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured ||
                (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null) &&
                 !optionsBuilder.Options.Extensions.Any(ext => !(ext is RelationalOptionsExtension) && !(ext is CoreOptionsExtension))))
            {
                optionsBuilder.UseSqlServer(@"Data Source=127.0.0.1\sqlexpress;Initial Catalog=WsmSystem;Integrated Security=False;Persist Security Info=True;User ID=sa;Password=Sa@123456");
            }
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

         void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<AppClient> AppClients
        {
            get;
            set;
        }

        public virtual DbSet<ClientInfo> ClientInfos
        {
            get;
            set;
        }

        public virtual DbSet<HttpRequestType> HttpRequestTypes
        {
            get;
            set;
        }

        public virtual DbSet<Module> Modules
        {
            get;
            set;
        }

        public virtual DbSet<RoleWiseScreenPermission> RoleWiseScreenPermissions
        {
            get;
            set;
        }

        public virtual DbSet<Screen> Screens
        {
            get;
            set;
        }

        public virtual DbSet<SecurityPolicy> SecurityPolicies
        {
            get;
            set;
        }

        public virtual DbSet<SubModule> SubModules
        {
            get;
            set;
        }

        public virtual DbSet<SubModuleSection> SubModuleSections
        {
            get;
            set;
        }

        public virtual DbSet<UserGroup> UserGroups
        {
            get;
            set;
        }

        public virtual DbSet<UserGroupLink> UserGroupLinks
        {
            get;
            set;
        }

        public virtual DbSet<UserGroupRoleLink> UserGroupRoleLinks
        {
            get;
            set;
        }

        public virtual DbSet<UserInfo> UserInfos
        {
            get;
            set;
        }

        public virtual DbSet<UserResource> UserResources
        {
            get;
            set;
        }

        public virtual DbSet<UserRole> UserRoles
        {
            get;
            set;
        }

        public virtual DbSet<UserRoleResourceLink> UserRoleResourceLinks
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            AppClientMapping(modelBuilder);
            CustomizeAppClientMapping(modelBuilder);

            ClientInfoMapping(modelBuilder);
            CustomizeClientInfoMapping(modelBuilder);

            HttpRequestTypeMapping(modelBuilder);
            CustomizeHttpRequestTypeMapping(modelBuilder);

            ModuleMapping(modelBuilder);
            CustomizeModuleMapping(modelBuilder);

            RoleWiseScreenPermissionMapping(modelBuilder);
            CustomizeRoleWiseScreenPermissionMapping(modelBuilder);

            ScreenMapping(modelBuilder);
            CustomizeScreenMapping(modelBuilder);

            SecurityPolicyMapping(modelBuilder);
            CustomizeSecurityPolicyMapping(modelBuilder);

            SubModuleMapping(modelBuilder);
            CustomizeSubModuleMapping(modelBuilder);

            SubModuleSectionMapping(modelBuilder);
            CustomizeSubModuleSectionMapping(modelBuilder);

            UserGroupMapping(modelBuilder);
            CustomizeUserGroupMapping(modelBuilder);

            UserGroupLinkMapping(modelBuilder);
            CustomizeUserGroupLinkMapping(modelBuilder);

            UserGroupRoleLinkMapping(modelBuilder);
            CustomizeUserGroupRoleLinkMapping(modelBuilder);

            UserInfoMapping(modelBuilder);
            CustomizeUserInfoMapping(modelBuilder);

            UserResourceMapping(modelBuilder);
            CustomizeUserResourceMapping(modelBuilder);

            UserRoleMapping(modelBuilder);
            CustomizeUserRoleMapping(modelBuilder);

            UserRoleResourceLinkMapping(modelBuilder);
            CustomizeUserRoleResourceLinkMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }

        #region AppClient Mapping

        private void AppClientMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AppClient>().ToTable(@"AppClient", @"securities");
            modelBuilder.Entity<AppClient>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<AppClient>().Property(x => x.AppClientName).HasColumnName(@"AppClientName").HasColumnType(@"nvarchar(300)").IsRequired().ValueGeneratedNever().HasMaxLength(300);
            modelBuilder.Entity<AppClient>().Property(x => x.ApplicationKey).HasColumnName(@"ApplicationKey").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AppClient>().Property(x => x.ExpireDate).HasColumnName(@"ExpireDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AppClient>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<AppClient>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"varchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<AppClient>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AppClient>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<AppClient>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AppClient>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AppClient>().HasKey(@"Id");
        }

         void CustomizeAppClientMapping(ModelBuilder modelBuilder);

        #endregion

        #region ClientInfo Mapping

        private void ClientInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ClientInfo>().ToTable(@"ClientInfo", @"securities");
            modelBuilder.Entity<ClientInfo>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ClientInfo>().Property(x => x.IdAppClient).HasColumnName(@"IdAppClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ClientInfo>().Property(x => x.CompanyName).HasColumnName(@"CompanyName").HasColumnType(@"nvarchar(300)").ValueGeneratedNever().HasMaxLength(300);
            modelBuilder.Entity<ClientInfo>().Property(x => x.CompanyEmail).HasColumnName(@"CompanyEmail").HasColumnType(@"nvarchar(200)").ValueGeneratedNever().HasMaxLength(200);
            modelBuilder.Entity<ClientInfo>().Property(x => x.CompanyUrl).HasColumnName(@"CompanyUrl").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<ClientInfo>().Property(x => x.CompanyAddress).HasColumnName(@"CompanyAddress").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<ClientInfo>().Property(x => x.LogoUrl).HasColumnName(@"LogoUrl").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<ClientInfo>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<ClientInfo>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<ClientInfo>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientInfo>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<ClientInfo>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientInfo>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ClientInfo>().HasKey(@"Id");
        }

         void CustomizeClientInfoMapping(ModelBuilder modelBuilder);

        #endregion

        #region HttpRequestType Mapping

        private void HttpRequestTypeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<HttpRequestType>().ToTable(@"HttpRequestType", @"securities");
            modelBuilder.Entity<HttpRequestType>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<HttpRequestType>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<HttpRequestType>().Property(x => x.HttpMethodType).HasColumnName(@"HttpMethodType").HasColumnType(@"nvarchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<HttpRequestType>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<HttpRequestType>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<HttpRequestType>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<HttpRequestType>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<HttpRequestType>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<HttpRequestType>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<HttpRequestType>().HasKey(@"IdClient", @"Id");
        }

         void CustomizeHttpRequestTypeMapping(ModelBuilder modelBuilder);

        #endregion

        #region Module Mapping

        private void ModuleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Module>().ToTable(@"Module", @"securities");
            modelBuilder.Entity<Module>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Module>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Module>().Property(x => x.ModuleName).HasColumnName(@"ModuleName").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Module>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Module>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<Module>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<Module>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Module>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<Module>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Module>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Module>().HasKey(@"IdClient", @"Id");
        }

         void CustomizeModuleMapping(ModelBuilder modelBuilder);

        #endregion

        #region RoleWiseScreenPermission Mapping

        private void RoleWiseScreenPermissionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RoleWiseScreenPermission>().ToTable(@"RoleWiseScreenPermission", @"securities");
            modelBuilder.Entity<RoleWiseScreenPermission>().Property(x => x.IdRole).HasColumnName(@"IdRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<RoleWiseScreenPermission>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<RoleWiseScreenPermission>().Property(x => x.ScreenCode).HasColumnName(@"ScreenCode").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<RoleWiseScreenPermission>().Property(x => x.AccessRight).HasColumnName(@"AccessRight").HasColumnType(@"nvarchar(4)").ValueGeneratedNever().HasMaxLength(4);
            modelBuilder.Entity<RoleWiseScreenPermission>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<RoleWiseScreenPermission>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<RoleWiseScreenPermission>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RoleWiseScreenPermission>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<RoleWiseScreenPermission>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RoleWiseScreenPermission>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RoleWiseScreenPermission>().HasKey(@"IdRole", @"IdClient", @"ScreenCode");
        }

         void CustomizeRoleWiseScreenPermissionMapping(ModelBuilder modelBuilder);

        #endregion

        #region Screen Mapping

        private void ScreenMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Screen>().ToTable(@"Screen", @"securities");
            modelBuilder.Entity<Screen>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Screen>().Property(x => x.ScreenCode).HasColumnName(@"ScreenCode").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Screen>().Property(x => x.ScreenName).HasColumnName(@"ScreenName").HasColumnType(@"nvarchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Screen>().Property(x => x.IdModule).HasColumnName(@"IdModule").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Screen>().Property(x => x.IdSubModule).HasColumnName(@"IdSubModule").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Screen>().Property(x => x.IdSubModuleSection).HasColumnName(@"IdSubModuleSection").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Screen>().Property(x => x.Ordinal).HasColumnName(@"Ordinal").HasColumnType(@"smallint").ValueGeneratedNever().HasPrecision(5, 0);
            modelBuilder.Entity<Screen>().Property(x => x.ScreenUri).HasColumnName(@"ScreenUri").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Screen>().Property(x => x.ScreenDescription).HasColumnName(@"ScreenDescription").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Screen>().Property(x => x.IsRequiredForApproval).HasColumnName(@"IsRequiredForApproval").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<Screen>().Property(x => x.IsFinancialScreen).HasColumnName(@"IsFinancialScreen").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<Screen>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Screen>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<Screen>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Screen>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Screen>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<Screen>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Screen>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Screen>().HasKey(@"IdClient", @"ScreenCode");
        }

         void CustomizeScreenMapping(ModelBuilder modelBuilder);

        #endregion

        #region SecurityPolicy Mapping

        private void SecurityPolicyMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SecurityPolicy>().ToTable(@"SecurityPolicy", @"securities");
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.MaximumWrongLoginTry).HasColumnName(@"MaximumWrongLoginTry").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.MinimumPasswordLength).HasColumnName(@"MinimumPasswordLength").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.PasswordAttemptWindow).HasColumnName(@"PasswordAttemptWindow").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.UserOnlineTimeWindow).HasColumnName(@"UserOnlineTimeWindow").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.IsAlphaNumericPasswordRequired).HasColumnName(@"IsAlphaNumericPasswordRequired").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.IsPasswordSaltRequired).HasColumnName(@"IsPasswordSaltRequired").HasColumnType(@"bit").ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.IsPasswordStrengthRequired).HasColumnName(@"IsPasswordStrengthRequired").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.IsUniqueEmailRequired).HasColumnName(@"IsUniqueEmailRequired").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SecurityPolicy>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<SecurityPolicy>().HasKey(@"Id", @"IdClient");
        }

         void CustomizeSecurityPolicyMapping(ModelBuilder modelBuilder);

        #endregion

        #region SubModule Mapping

        private void SubModuleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SubModule>().ToTable(@"SubModule", @"securities");
            modelBuilder.Entity<SubModule>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModule>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModule>().Property(x => x.IdModule).HasColumnName(@"IdModule").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModule>().Property(x => x.SubModuleName).HasColumnName(@"SubModuleName").HasColumnType(@"nvarchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<SubModule>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModule>().Property(x => x.Ordinal).HasColumnName(@"Ordinal").HasColumnType(@"smallint").ValueGeneratedNever().HasPrecision(5, 0);
            modelBuilder.Entity<SubModule>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<SubModule>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<SubModule>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModule>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<SubModule>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModule>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<SubModule>().HasKey(@"IdClient", @"Id", @"IdModule");
        }

         void CustomizeSubModuleMapping(ModelBuilder modelBuilder);

        #endregion

        #region SubModuleSection Mapping

        private void SubModuleSectionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SubModuleSection>().ToTable(@"SubModuleSection", @"securities");
            modelBuilder.Entity<SubModuleSection>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModuleSection>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModuleSection>().Property(x => x.IdModule).HasColumnName(@"IdModule").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModuleSection>().Property(x => x.IdSubModule).HasColumnName(@"IdSubModule").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModuleSection>().Property(x => x.SectionName).HasColumnName(@"SectionName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModuleSection>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModuleSection>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SubModuleSection>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModuleSection>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModuleSection>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SubModuleSection>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModuleSection>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<SubModuleSection>().HasKey(@"IdClient", @"Id", @"IdModule", @"IdSubModule");
        }

         void CustomizeSubModuleSectionMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserGroup Mapping

        private void UserGroupMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserGroup>().ToTable(@"UserGroup", @"securities");
            modelBuilder.Entity<UserGroup>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroup>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroup>().Property(x => x.GroupName).HasColumnName(@"GroupName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroup>().Property(x => x.GroupDescription).HasColumnName(@"GroupDescription").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UserGroup>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserGroup>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserGroup>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroup>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<UserGroup>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroup>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroup>().HasKey(@"IdClient", @"Id");
        }

         void CustomizeUserGroupMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserGroupLink Mapping

        private void UserGroupLinkMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserGroupLink>().ToTable(@"UserGroupLink", @"securities");
            modelBuilder.Entity<UserGroupLink>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupLink>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupLink>().Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupLink>().Property(x => x.IdUserGroup).HasColumnName(@"IdUserGroup").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupLink>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserGroupLink>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserGroupLink>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupLink>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<UserGroupLink>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupLink>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupLink>().HasKey(@"IdClient", @"Id");
        }

         void CustomizeUserGroupLinkMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserGroupRoleLink Mapping

        private void UserGroupRoleLinkMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserGroupRoleLink>().ToTable(@"UserGroupRoleLink", @"securities");
            modelBuilder.Entity<UserGroupRoleLink>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupRoleLink>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupRoleLink>().Property(x => x.IdUserGroup).HasColumnName(@"IdUserGroup").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupRoleLink>().Property(x => x.IdUserRole).HasColumnName(@"IdUserRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupRoleLink>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserGroupRoleLink>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserGroupRoleLink>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupRoleLink>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<UserGroupRoleLink>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupRoleLink>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupRoleLink>().HasKey(@"IdClient", @"Id");
        }

         void CustomizeUserGroupRoleLinkMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserInfo Mapping

        private void UserInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserInfo>().ToTable(@"UserInfo", @"securities");
            modelBuilder.Entity<UserInfo>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserInfo>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserInfo>().Property(x => x.AccessLevel).HasColumnName(@"AccessLevel").HasColumnType(@"nvarchar(4)").ValueGeneratedNever().HasMaxLength(4);
            modelBuilder.Entity<UserInfo>().Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserInfo>().Property(x => x.UserFullName).HasColumnName(@"UserFullName").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<UserInfo>().Property(x => x.UserPassword).HasColumnName(@"UserPassword").HasColumnType(@"nvarchar(500)").IsRequired().ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UserInfo>().Property(x => x.PasswordSalt).HasColumnName(@"PasswordSalt").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UserInfo>().Property(x => x.IdRole).HasColumnName(@"IdRole").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserInfo>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserInfo>().Property(x => x.UserEmail).HasColumnName(@"UserEmail").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<UserInfo>().Property(x => x.IsLockedOut).HasColumnName(@"IsLockedOut").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserInfo>().Property(x => x.ChangePassword).HasColumnName(@"ChangePassword").HasColumnType(@"bit").ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserInfo>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserInfo>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserInfo>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<UserInfo>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserInfo>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserInfo>().HasKey(@"IdClient", @"Id");
        }

         void CustomizeUserInfoMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserResource Mapping

        private void UserResourceMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserResource>().ToTable(@"UserResource", @"securities");
            modelBuilder.Entity<UserResource>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserResource>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserResource>().Property(x => x.ApiUrl).HasColumnName(@"ApiUrl").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserResource>().Property(x => x.IdHttpMethod).HasColumnName(@"IdHttpMethod").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserResource>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserResource>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserResource>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserResource>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<UserResource>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserResource>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserResource>().HasKey(@"IdClient", @"Id");
        }

         void CustomizeUserResourceMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserRole Mapping

        private void UserRoleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserRole>().ToTable(@"UserRole", @"securities");
            modelBuilder.Entity<UserRole>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRole>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRole>().Property(x => x.RoleName).HasColumnName(@"RoleName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRole>().Property(x => x.RoleDescription).HasColumnName(@"RoleDescription").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UserRole>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserRole>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserRole>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRole>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<UserRole>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRole>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().HasKey(@"IdClient", @"Id");
        }

         void CustomizeUserRoleMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserRoleResourceLink Mapping

        private void UserRoleResourceLinkMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserRoleResourceLink>().ToTable(@"UserRoleResourceLink", @"securities");
            modelBuilder.Entity<UserRoleResourceLink>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleResourceLink>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleResourceLink>().Property(x => x.IdUserResource).HasColumnName(@"IdUserResource").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleResourceLink>().Property(x => x.IdUserRole).HasColumnName(@"IdUserRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleResourceLink>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRoleResourceLink>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserRoleResourceLink>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRoleResourceLink>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRoleResourceLink>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRoleResourceLink>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRoleResourceLink>().HasKey(@"IdClient", @"Id");
        }

         void CustomizeUserRoleResourceLinkMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AppClient>().HasMany(x => x.ClientInfos).WithOne(op => op.AppClient).HasForeignKey(@"IdAppClient").IsRequired(true);

            modelBuilder.Entity<ClientInfo>().HasOne(x => x.AppClient).WithMany(op => op.ClientInfos).HasForeignKey(@"IdAppClient").IsRequired(true);

            modelBuilder.Entity<HttpRequestType>().HasMany(x => x.UserResources).WithOne(op => op.HttpRequestType).HasForeignKey(@"IdClient", @"IdHttpMethod").IsRequired(true);

            modelBuilder.Entity<Module>().HasMany(x => x.SubModules).WithOne(op => op.Module).HasForeignKey(@"IdClient", @"IdModule").IsRequired(true);

            modelBuilder.Entity<RoleWiseScreenPermission>().HasOne(x => x.Screen).WithMany(op => op.RoleWiseScreenPermissions).HasForeignKey(@"IdClient", @"ScreenCode").IsRequired(true);
            modelBuilder.Entity<RoleWiseScreenPermission>().HasOne(x => x.UserRole).WithMany(op => op.RoleWiseScreenPermissions).HasForeignKey(@"IdClient", @"IdRole").IsRequired(true);

            modelBuilder.Entity<Screen>().HasMany(x => x.RoleWiseScreenPermissions).WithOne(op => op.Screen).HasForeignKey(@"IdClient", @"ScreenCode").IsRequired(true);
            modelBuilder.Entity<Screen>().HasOne(x => x.SubModuleSection).WithMany(op => op.Screens).HasForeignKey(@"IdClient", @"IdSubModuleSection", @"IdModule", @"IdSubModule").IsRequired(true);

            modelBuilder.Entity<SubModule>().HasOne(x => x.Module).WithMany(op => op.SubModules).HasForeignKey(@"IdClient", @"IdModule").IsRequired(true);
            modelBuilder.Entity<SubModule>().HasMany(x => x.SubModuleSections).WithOne(op => op.SubModule).HasForeignKey(@"IdClient", @"IdSubModule", @"IdModule").IsRequired(true);

            modelBuilder.Entity<SubModuleSection>().HasMany(x => x.Screens).WithOne(op => op.SubModuleSection).HasForeignKey(@"IdClient", @"IdSubModuleSection", @"IdModule", @"IdSubModule").IsRequired(true);
            modelBuilder.Entity<SubModuleSection>().HasOne(x => x.SubModule).WithMany(op => op.SubModuleSections).HasForeignKey(@"IdClient", @"IdSubModule", @"IdModule").IsRequired(true);

            modelBuilder.Entity<UserGroup>().HasMany(x => x.UserGroupLinks).WithOne(op => op.UserGroup).HasForeignKey(@"IdClient", @"IdUserGroup").IsRequired(true);
            modelBuilder.Entity<UserGroup>().HasMany(x => x.UserGroupRoleLinks).WithOne(op => op.UserGroup).HasForeignKey(@"IdClient", @"IdUserGroup").IsRequired(true);

            modelBuilder.Entity<UserGroupLink>().HasOne(x => x.UserInfo).WithMany(op => op.UserGroupLinks).HasForeignKey(@"IdClient", @"IdUser").IsRequired(true);
            modelBuilder.Entity<UserGroupLink>().HasOne(x => x.UserGroup).WithMany(op => op.UserGroupLinks).HasForeignKey(@"IdClient", @"IdUserGroup").IsRequired(true);

            modelBuilder.Entity<UserGroupRoleLink>().HasOne(x => x.UserGroup).WithMany(op => op.UserGroupRoleLinks).HasForeignKey(@"IdClient", @"IdUserGroup").IsRequired(true);
            modelBuilder.Entity<UserGroupRoleLink>().HasOne(x => x.UserRole).WithMany(op => op.UserGroupRoleLinks).HasForeignKey(@"IdClient", @"IdUserRole").IsRequired(true);

            modelBuilder.Entity<UserInfo>().HasMany(x => x.UserGroupLinks).WithOne(op => op.UserInfo).HasForeignKey(@"IdClient", @"IdUser").IsRequired(true);
            modelBuilder.Entity<UserInfo>().HasOne(x => x.UserRole).WithMany(op => op.UserInfos).HasForeignKey(@"IdClient", @"IdRole").IsRequired(false);

            modelBuilder.Entity<UserResource>().HasOne(x => x.HttpRequestType).WithMany(op => op.UserResources).HasForeignKey(@"IdClient", @"IdHttpMethod").IsRequired(true);
            modelBuilder.Entity<UserResource>().HasMany(x => x.UserRoleResourceLinks).WithOne(op => op.UserResource).HasForeignKey(@"IdClient", @"IdUserResource").IsRequired(true);

            modelBuilder.Entity<UserRole>().HasMany(x => x.RoleWiseScreenPermissions).WithOne(op => op.UserRole).HasForeignKey(@"IdClient", @"IdRole").IsRequired(true);
            modelBuilder.Entity<UserRole>().HasMany(x => x.UserGroupRoleLinks).WithOne(op => op.UserRole).HasForeignKey(@"IdClient", @"IdUserRole").IsRequired(true);
            modelBuilder.Entity<UserRole>().HasMany(x => x.UserInfos).WithOne(op => op.UserRole).HasForeignKey(@"IdClient", @"IdRole").IsRequired(false);
            modelBuilder.Entity<UserRole>().HasMany(x => x.UserRoleResourceLinks).WithOne(op => op.UserRole).HasForeignKey(@"IdClient", @"IdUserRole").IsRequired(true);

            modelBuilder.Entity<UserRoleResourceLink>().HasOne(x => x.UserResource).WithMany(op => op.UserRoleResourceLinks).HasForeignKey(@"IdClient", @"IdUserResource").IsRequired(true);
            modelBuilder.Entity<UserRoleResourceLink>().HasOne(x => x.UserRole).WithMany(op => op.UserRoleResourceLinks).HasForeignKey(@"IdClient", @"IdUserRole").IsRequired(true);
        }

         void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

    }
}
