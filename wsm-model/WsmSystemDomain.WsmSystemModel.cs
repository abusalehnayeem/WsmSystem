//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 7/21/2023 10:48:20 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WsmSystemModel
{

    public partial class WsmSystemModel : DbContext
    {

        public WsmSystemModel() :
            base()
        {
            OnCreated();
        }

        public WsmSystemModel(DbContextOptions<WsmSystemModel> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured ||
                (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null) &&
                 !optionsBuilder.Options.Extensions.Any(ext => !(ext is RelationalOptionsExtension) && !(ext is CoreOptionsExtension))))
            {
                optionsBuilder.UseSqlServer(@"Data Source=.\sqlexpress;Initial Catalog=WsmSystem;Integrated Security=False;Persist Security Info=True;User ID=sa;Password=Sa@123456");
            }
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<AppClient> AppClients
        {
            get;
            set;
        }

        public virtual DbSet<AppClientHistory> AppClientHistories
        {
            get;
            set;
        }

        public virtual DbSet<BaseLanguage> BaseLanguages
        {
            get;
            set;
        }

        public virtual DbSet<BaseLanguageHistory> BaseLanguageHistories
        {
            get;
            set;
        }

        public virtual DbSet<ClientCompany> ClientCompanies
        {
            get;
            set;
        }

        public virtual DbSet<ClientCompanyHistory> ClientCompanyHistories
        {
            get;
            set;
        }

        public virtual DbSet<EmailTemplate> EmailTemplates
        {
            get;
            set;
        }

        public virtual DbSet<EmailTemplateHistory> EmailTemplateHistories
        {
            get;
            set;
        }

        public virtual DbSet<HttpMethod> HttpMethods
        {
            get;
            set;
        }

        public virtual DbSet<HttpMethodHistory> HttpMethodHistories
        {
            get;
            set;
        }

        public virtual DbSet<Module> Modules
        {
            get;
            set;
        }

        public virtual DbSet<ModuleHistory> ModuleHistories
        {
            get;
            set;
        }

        public virtual DbSet<Notice> Notices
        {
            get;
            set;
        }

        public virtual DbSet<NoticeHistory> NoticeHistories
        {
            get;
            set;
        }

        public virtual DbSet<PermissionNamingPolicy> PermissionNamingPolicies
        {
            get;
            set;
        }

        public virtual DbSet<PermissionNamingPolicyHistory> PermissionNamingPolicyHistories
        {
            get;
            set;
        }

        public virtual DbSet<PhraseTag> PhraseTags
        {
            get;
            set;
        }

        public virtual DbSet<PhraseTagHistory> PhraseTagHistories
        {
            get;
            set;
        }

        public virtual DbSet<PhraseTagTranslation> PhraseTagTranslations
        {
            get;
            set;
        }

        public virtual DbSet<PhraseTagTranslationHistory> PhraseTagTranslationHistories
        {
            get;
            set;
        }

        public virtual DbSet<RoleScreenLink> RoleScreenLinks
        {
            get;
            set;
        }

        public virtual DbSet<RoleScreenLinkHistory> RoleScreenLinkHistories
        {
            get;
            set;
        }

        public virtual DbSet<Screen> Screens
        {
            get;
            set;
        }

        public virtual DbSet<ScreenHistory> ScreenHistories
        {
            get;
            set;
        }

        public virtual DbSet<Section> Sections
        {
            get;
            set;
        }

        public virtual DbSet<SectionHistory> SectionHistories
        {
            get;
            set;
        }

        public virtual DbSet<SmtpClient> SmtpClients
        {
            get;
            set;
        }

        public virtual DbSet<SmtpClientHistory> SmtpClientHistories
        {
            get;
            set;
        }

        public virtual DbSet<SubModule> SubModules
        {
            get;
            set;
        }

        public virtual DbSet<SubModuleHistory> SubModuleHistories
        {
            get;
            set;
        }

        public virtual DbSet<UserGroup> UserGroups
        {
            get;
            set;
        }

        public virtual DbSet<UserGroupHistory> UserGroupHistories
        {
            get;
            set;
        }

        public virtual DbSet<UserGroupWiseRoleMapping> UserGroupWiseRoleMappings
        {
            get;
            set;
        }

        public virtual DbSet<UserGroupWiseRoleMappingHistory> UserGroupWiseRoleMappingHistories
        {
            get;
            set;
        }

        public virtual DbSet<UserResource> UserResources
        {
            get;
            set;
        }

        public virtual DbSet<UserResourceHistory> UserResourceHistories
        {
            get;
            set;
        }

        public virtual DbSet<UserRole> UserRoles
        {
            get;
            set;
        }

        public virtual DbSet<UserRoleHistory> UserRoleHistories
        {
            get;
            set;
        }

        public virtual DbSet<UserRoleWiseResourceMapping> UserRoleWiseResourceMappings
        {
            get;
            set;
        }

        public virtual DbSet<UserRoleWiseResourceMappingHistory> UserRoleWiseResourceMappingHistories
        {
            get;
            set;
        }

        public virtual DbSet<User> Users
        {
            get;
            set;
        }

        public virtual DbSet<UsersHistory> UsersHistories
        {
            get;
            set;
        }

        public virtual DbSet<UserWiseGroupMapping> UserWiseGroupMappings
        {
            get;
            set;
        }

        public virtual DbSet<UserWiseGroupMappingHistory> UserWiseGroupMappingHistories
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            this.AppClientMapping(modelBuilder);
            this.CustomizeAppClientMapping(modelBuilder);

            this.AppClientHistoryMapping(modelBuilder);
            this.CustomizeAppClientHistoryMapping(modelBuilder);

            this.BaseLanguageMapping(modelBuilder);
            this.CustomizeBaseLanguageMapping(modelBuilder);

            this.BaseLanguageHistoryMapping(modelBuilder);
            this.CustomizeBaseLanguageHistoryMapping(modelBuilder);

            this.ClientCompanyMapping(modelBuilder);
            this.CustomizeClientCompanyMapping(modelBuilder);

            this.ClientCompanyHistoryMapping(modelBuilder);
            this.CustomizeClientCompanyHistoryMapping(modelBuilder);

            this.EmailTemplateMapping(modelBuilder);
            this.CustomizeEmailTemplateMapping(modelBuilder);

            this.EmailTemplateHistoryMapping(modelBuilder);
            this.CustomizeEmailTemplateHistoryMapping(modelBuilder);

            this.HttpMethodMapping(modelBuilder);
            this.CustomizeHttpMethodMapping(modelBuilder);

            this.HttpMethodHistoryMapping(modelBuilder);
            this.CustomizeHttpMethodHistoryMapping(modelBuilder);

            this.ModuleMapping(modelBuilder);
            this.CustomizeModuleMapping(modelBuilder);

            this.ModuleHistoryMapping(modelBuilder);
            this.CustomizeModuleHistoryMapping(modelBuilder);

            this.NoticeMapping(modelBuilder);
            this.CustomizeNoticeMapping(modelBuilder);

            this.NoticeHistoryMapping(modelBuilder);
            this.CustomizeNoticeHistoryMapping(modelBuilder);

            this.PermissionNamingPolicyMapping(modelBuilder);
            this.CustomizePermissionNamingPolicyMapping(modelBuilder);

            this.PermissionNamingPolicyHistoryMapping(modelBuilder);
            this.CustomizePermissionNamingPolicyHistoryMapping(modelBuilder);

            this.PhraseTagMapping(modelBuilder);
            this.CustomizePhraseTagMapping(modelBuilder);

            this.PhraseTagHistoryMapping(modelBuilder);
            this.CustomizePhraseTagHistoryMapping(modelBuilder);

            this.PhraseTagTranslationMapping(modelBuilder);
            this.CustomizePhraseTagTranslationMapping(modelBuilder);

            this.PhraseTagTranslationHistoryMapping(modelBuilder);
            this.CustomizePhraseTagTranslationHistoryMapping(modelBuilder);

            this.RoleScreenLinkMapping(modelBuilder);
            this.CustomizeRoleScreenLinkMapping(modelBuilder);

            this.RoleScreenLinkHistoryMapping(modelBuilder);
            this.CustomizeRoleScreenLinkHistoryMapping(modelBuilder);

            this.ScreenMapping(modelBuilder);
            this.CustomizeScreenMapping(modelBuilder);

            this.ScreenHistoryMapping(modelBuilder);
            this.CustomizeScreenHistoryMapping(modelBuilder);

            this.SectionMapping(modelBuilder);
            this.CustomizeSectionMapping(modelBuilder);

            this.SectionHistoryMapping(modelBuilder);
            this.CustomizeSectionHistoryMapping(modelBuilder);

            this.SmtpClientMapping(modelBuilder);
            this.CustomizeSmtpClientMapping(modelBuilder);

            this.SmtpClientHistoryMapping(modelBuilder);
            this.CustomizeSmtpClientHistoryMapping(modelBuilder);

            this.SubModuleMapping(modelBuilder);
            this.CustomizeSubModuleMapping(modelBuilder);

            this.SubModuleHistoryMapping(modelBuilder);
            this.CustomizeSubModuleHistoryMapping(modelBuilder);

            this.UserGroupMapping(modelBuilder);
            this.CustomizeUserGroupMapping(modelBuilder);

            this.UserGroupHistoryMapping(modelBuilder);
            this.CustomizeUserGroupHistoryMapping(modelBuilder);

            this.UserGroupWiseRoleMappingMapping(modelBuilder);
            this.CustomizeUserGroupWiseRoleMappingMapping(modelBuilder);

            this.UserGroupWiseRoleMappingHistoryMapping(modelBuilder);
            this.CustomizeUserGroupWiseRoleMappingHistoryMapping(modelBuilder);

            this.UserResourceMapping(modelBuilder);
            this.CustomizeUserResourceMapping(modelBuilder);

            this.UserResourceHistoryMapping(modelBuilder);
            this.CustomizeUserResourceHistoryMapping(modelBuilder);

            this.UserRoleMapping(modelBuilder);
            this.CustomizeUserRoleMapping(modelBuilder);

            this.UserRoleHistoryMapping(modelBuilder);
            this.CustomizeUserRoleHistoryMapping(modelBuilder);

            this.UserRoleWiseResourceMappingMapping(modelBuilder);
            this.CustomizeUserRoleWiseResourceMappingMapping(modelBuilder);

            this.UserRoleWiseResourceMappingHistoryMapping(modelBuilder);
            this.CustomizeUserRoleWiseResourceMappingHistoryMapping(modelBuilder);

            this.UserMapping(modelBuilder);
            this.CustomizeUserMapping(modelBuilder);

            this.UsersHistoryMapping(modelBuilder);
            this.CustomizeUsersHistoryMapping(modelBuilder);

            this.UserWiseGroupMappingMapping(modelBuilder);
            this.CustomizeUserWiseGroupMappingMapping(modelBuilder);

            this.UserWiseGroupMappingHistoryMapping(modelBuilder);
            this.CustomizeUserWiseGroupMappingHistoryMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }

        #region AppClient Mapping

        private void AppClientMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AppClient>().ToTable(@"AppClient", @"core");
            modelBuilder.Entity<AppClient>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<AppClient>().Property(x => x.AppClientName).HasColumnName(@"AppClientName").HasColumnType(@"nvarchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<AppClient>().Property(x => x.ApplicationKey).HasColumnName(@"ApplicationKey").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AppClient>().Property(x => x.ExpireDate).HasColumnName(@"ExpireDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AppClient>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<AppClient>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<AppClient>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AppClient>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<AppClient>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AppClient>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AppClient>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<AppClient>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<AppClient>().HasKey(@"Id");
        }

        partial void CustomizeAppClientMapping(ModelBuilder modelBuilder);

        #endregion

        #region AppClientHistory Mapping

        private void AppClientHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AppClientHistory>().HasNoKey();
            modelBuilder.Entity<AppClientHistory>().ToView(@"AppClientHistory", @"core");
            modelBuilder.Entity<AppClientHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<AppClientHistory>().Property(x => x.AppClientName).HasColumnName(@"AppClientName").HasColumnType(@"nvarchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<AppClientHistory>().Property(x => x.ApplicationKey).HasColumnName(@"ApplicationKey").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AppClientHistory>().Property(x => x.ExpireDate).HasColumnName(@"ExpireDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AppClientHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AppClientHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<AppClientHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AppClientHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AppClientHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AppClientHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AppClientHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AppClientHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeAppClientHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region BaseLanguage Mapping

        private void BaseLanguageMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<BaseLanguage>().ToTable(@"BaseLanguage", @"core");
            modelBuilder.Entity<BaseLanguage>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<BaseLanguage>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<BaseLanguage>().Property(x => x.DescriptionDetail).HasColumnName(@"DescriptionDetail").HasColumnType(@"nvarchar(30)").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<BaseLanguage>().Property(x => x.DescriptionShort).HasColumnName(@"DescriptionShort").HasColumnType(@"nvarchar(5)").ValueGeneratedNever().HasMaxLength(5);
            modelBuilder.Entity<BaseLanguage>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<BaseLanguage>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<BaseLanguage>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<BaseLanguage>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<BaseLanguage>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<BaseLanguage>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<BaseLanguage>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<BaseLanguage>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<BaseLanguage>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<BaseLanguage>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeBaseLanguageMapping(ModelBuilder modelBuilder);

        #endregion

        #region BaseLanguageHistory Mapping

        private void BaseLanguageHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<BaseLanguageHistory>().HasNoKey();
            modelBuilder.Entity<BaseLanguageHistory>().ToView(@"BaseLanguageHistory", @"core");
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.DescriptionDetail).HasColumnName(@"DescriptionDetail").HasColumnType(@"nvarchar(30)").ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.DescriptionShort).HasColumnName(@"DescriptionShort").HasColumnType(@"nvarchar(5)").ValueGeneratedNever().HasMaxLength(5);
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<BaseLanguageHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeBaseLanguageHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region ClientCompany Mapping

        private void ClientCompanyMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ClientCompany>().ToTable(@"ClientCompany", @"core");
            modelBuilder.Entity<ClientCompany>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ClientCompany>().Property(x => x.IdAppClient).HasColumnName(@"IdAppClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ClientCompany>().Property(x => x.CompanyShortCode).HasColumnName(@"CompanyShortCode").HasColumnType(@"nvarchar(20)").ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ClientCompany>().Property(x => x.CompanyName).HasColumnName(@"CompanyName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompany>().Property(x => x.CompanyFullName).HasColumnName(@"CompanyFullName").HasColumnType(@"nvarchar(400)").ValueGeneratedNever().HasMaxLength(400);
            modelBuilder.Entity<ClientCompany>().Property(x => x.CompanyTelephone).HasColumnName(@"CompanyTelephone").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompany>().Property(x => x.CompanyFax).HasColumnName(@"CompanyFax").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompany>().Property(x => x.CompanyEmail).HasColumnName(@"CompanyEmail").HasColumnType(@"nvarchar(200)").ValueGeneratedNever().HasMaxLength(200);
            modelBuilder.Entity<ClientCompany>().Property(x => x.CompanyUrl).HasColumnName(@"CompanyUrl").HasColumnType(@"nvarchar(150)").ValueGeneratedNever().HasMaxLength(150);
            modelBuilder.Entity<ClientCompany>().Property(x => x.CompanyAddress).HasColumnName(@"CompanyAddress").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<ClientCompany>().Property(x => x.CompanyIdentificationNo).HasColumnName(@"CompanyIdentificationNo").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompany>().Property(x => x.CompanyLogo).HasColumnName(@"CompanyLogo").HasColumnType(@"image").ValueGeneratedNever().HasMaxLength(2147483647);
            modelBuilder.Entity<ClientCompany>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<ClientCompany>().Property(x => x.IsDefault).HasColumnName(@"IsDefault").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<ClientCompany>().Property(x => x.ExcludeSocialSecurity).HasColumnName(@"ExcludeSocialSecurity").HasColumnType(@"bit").ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<ClientCompany>().Property(x => x.ExcludeSalaryTax).HasColumnName(@"ExcludeSalaryTax").HasColumnType(@"bit").ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<ClientCompany>().Property(x => x.SocialSecurityNumber).HasColumnName(@"SocialSecurityNumber").HasColumnType(@"nvarchar(20)").ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ClientCompany>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<ClientCompany>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompany>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<ClientCompany>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompany>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ClientCompany>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<ClientCompany>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<ClientCompany>().HasKey(@"IdClient");
        }

        partial void CustomizeClientCompanyMapping(ModelBuilder modelBuilder);

        #endregion

        #region ClientCompanyHistory Mapping

        private void ClientCompanyHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ClientCompanyHistory>().HasNoKey();
            modelBuilder.Entity<ClientCompanyHistory>().ToView(@"ClientCompanyHistory", @"core");
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.IdAppClient).HasColumnName(@"IdAppClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.CompanyShortCode).HasColumnName(@"CompanyShortCode").HasColumnType(@"nvarchar(20)").ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.CompanyName).HasColumnName(@"CompanyName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.CompanyFullName).HasColumnName(@"CompanyFullName").HasColumnType(@"nvarchar(400)").ValueGeneratedNever().HasMaxLength(400);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.CompanyTelephone).HasColumnName(@"CompanyTelephone").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.CompanyFax).HasColumnName(@"CompanyFax").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.CompanyEmail).HasColumnName(@"CompanyEmail").HasColumnType(@"nvarchar(200)").ValueGeneratedNever().HasMaxLength(200);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.CompanyUrl).HasColumnName(@"CompanyUrl").HasColumnType(@"nvarchar(150)").ValueGeneratedNever().HasMaxLength(150);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.CompanyAddress).HasColumnName(@"CompanyAddress").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.CompanyIdentificationNo).HasColumnName(@"CompanyIdentificationNo").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.CompanyLogo).HasColumnName(@"CompanyLogo").HasColumnType(@"image").ValueGeneratedNever().HasMaxLength(2147483647);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.IsDefault).HasColumnName(@"IsDefault").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.ExcludeSocialSecurity).HasColumnName(@"ExcludeSocialSecurity").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.ExcludeSalaryTax).HasColumnName(@"ExcludeSalaryTax").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.SocialSecurityNumber).HasColumnName(@"SocialSecurityNumber").HasColumnType(@"nvarchar(20)").ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ClientCompanyHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeClientCompanyHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region EmailTemplate Mapping

        private void EmailTemplateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EmailTemplate>().ToTable(@"EmailTemplate", @"core");
            modelBuilder.Entity<EmailTemplate>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<EmailTemplate>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<EmailTemplate>().Property(x => x.TemplateName).HasColumnName(@"TemplateName").HasColumnType(@"nvarchar(60)").IsRequired().ValueGeneratedNever().HasMaxLength(60);
            modelBuilder.Entity<EmailTemplate>().Property(x => x.Subject).HasColumnName(@"Subject").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<EmailTemplate>().Property(x => x.IdServiceType).HasColumnName(@"IdServiceType").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<EmailTemplate>().Property(x => x.TemplateBody).HasColumnName(@"TemplateBody").HasColumnType(@"varchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<EmailTemplate>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<EmailTemplate>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<EmailTemplate>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<EmailTemplate>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<EmailTemplate>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<EmailTemplate>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<EmailTemplate>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<EmailTemplate>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<EmailTemplate>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<EmailTemplate>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeEmailTemplateMapping(ModelBuilder modelBuilder);

        #endregion

        #region EmailTemplateHistory Mapping

        private void EmailTemplateHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EmailTemplateHistory>().HasNoKey();
            modelBuilder.Entity<EmailTemplateHistory>().ToView(@"EmailTemplateHistory", @"core");
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.TemplateName).HasColumnName(@"TemplateName").HasColumnType(@"nvarchar(60)").IsRequired().ValueGeneratedNever().HasMaxLength(60);
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.Subject).HasColumnName(@"Subject").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.IdServiceType).HasColumnName(@"IdServiceType").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.TemplateBody).HasColumnName(@"TemplateBody").HasColumnType(@"varchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EmailTemplateHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeEmailTemplateHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region HttpMethod Mapping

        private void HttpMethodMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<HttpMethod>().ToTable(@"HttpMethod", @"core");
            modelBuilder.Entity<HttpMethod>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0).HasDefaultValueSql(@"10001001");
            modelBuilder.Entity<HttpMethod>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<HttpMethod>().Property(x => x.Method).HasColumnName(@"Method").HasColumnType(@"nvarchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<HttpMethod>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<HttpMethod>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<HttpMethod>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<HttpMethod>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<HttpMethod>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<HttpMethod>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<HttpMethod>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<HttpMethod>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<HttpMethod>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<HttpMethod>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeHttpMethodMapping(ModelBuilder modelBuilder);

        #endregion

        #region HttpMethodHistory Mapping

        private void HttpMethodHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<HttpMethodHistory>().HasNoKey();
            modelBuilder.Entity<HttpMethodHistory>().ToView(@"HttpMethodHistory", @"core");
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.Method).HasColumnName(@"Method").HasColumnType(@"nvarchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<HttpMethodHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeHttpMethodHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region Module Mapping

        private void ModuleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Module>().ToTable(@"Module", @"core");
            modelBuilder.Entity<Module>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Module>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Module>().Property(x => x.ModuleCode).HasColumnName(@"ModuleCode").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Module>().Property(x => x.ModuleName).HasColumnName(@"ModuleName").HasColumnType(@"varchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Module>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Module>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"varchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<Module>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<Module>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Module>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Module>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Module>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Module>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Module>().Property(x => x.Ordinal).HasColumnName(@"Ordinal").HasColumnType(@"smallint").ValueGeneratedNever().HasPrecision(5, 0);
            modelBuilder.Entity<Module>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<Module>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<Module>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeModuleMapping(ModelBuilder modelBuilder);

        #endregion

        #region ModuleHistory Mapping

        private void ModuleHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ModuleHistory>().HasNoKey();
            modelBuilder.Entity<ModuleHistory>().ToView(@"ModuleHistory", @"core");
            modelBuilder.Entity<ModuleHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ModuleHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ModuleHistory>().Property(x => x.ModuleCode).HasColumnName(@"ModuleCode").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ModuleHistory>().Property(x => x.ModuleName).HasColumnName(@"ModuleName").HasColumnType(@"varchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<ModuleHistory>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ModuleHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"varchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<ModuleHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<ModuleHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ModuleHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ModuleHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ModuleHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ModuleHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ModuleHistory>().Property(x => x.Ordinal).HasColumnName(@"Ordinal").HasColumnType(@"smallint").ValueGeneratedNever().HasPrecision(5, 0);
            modelBuilder.Entity<ModuleHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ModuleHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeModuleHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region Notice Mapping

        private void NoticeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Notice>().ToTable(@"Notice", @"core");
            modelBuilder.Entity<Notice>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Notice>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Notice>().Property(x => x.Title).HasColumnName(@"Title").HasColumnType(@"varchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Notice>().Property(x => x.NoticeBody).HasColumnName(@"NoticeBody").HasColumnType(@"varchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Notice>().Property(x => x.AttachedFileUrl).HasColumnName(@"AttachedFileUrl").HasColumnType(@"varchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Notice>().Property(x => x.IsPublished).HasColumnName(@"IsPublished").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Notice>().Property(x => x.PublishedDate).HasColumnName(@"PublishedDate").HasColumnType(@"datetime").ValueGeneratedNever();
            modelBuilder.Entity<Notice>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<Notice>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Notice>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"varchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<Notice>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Notice>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Notice>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Notice>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Notice>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<Notice>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<Notice>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeNoticeMapping(ModelBuilder modelBuilder);

        #endregion

        #region NoticeHistory Mapping

        private void NoticeHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<NoticeHistory>().HasNoKey();
            modelBuilder.Entity<NoticeHistory>().ToView(@"NoticeHistory", @"core");
            modelBuilder.Entity<NoticeHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<NoticeHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<NoticeHistory>().Property(x => x.Title).HasColumnName(@"Title").HasColumnType(@"varchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<NoticeHistory>().Property(x => x.NoticeBody).HasColumnName(@"NoticeBody").HasColumnType(@"varchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<NoticeHistory>().Property(x => x.AttachedFileUrl).HasColumnName(@"AttachedFileUrl").HasColumnType(@"varchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<NoticeHistory>().Property(x => x.IsPublished).HasColumnName(@"IsPublished").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<NoticeHistory>().Property(x => x.PublishedDate).HasColumnName(@"PublishedDate").HasColumnType(@"datetime").ValueGeneratedNever();
            modelBuilder.Entity<NoticeHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<NoticeHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<NoticeHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"varchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<NoticeHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"varchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<NoticeHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<NoticeHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<NoticeHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<NoticeHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<NoticeHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeNoticeHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region PermissionNamingPolicy Mapping

        private void PermissionNamingPolicyMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PermissionNamingPolicy>().ToTable(@"PermissionNamingPolicy", @"core");
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.LevelName).HasColumnName(@"LevelName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.LevelLength).HasColumnName(@"LevelLength").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.LevelStartPoint).HasColumnName(@"LevelStartPoint").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.LevelEndPoint).HasColumnName(@"LevelEndPoint").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.LevelIncrementBy).HasColumnName(@"LevelIncrementBy").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3).HasDefaultValueSql(@"'ADD'");
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<PermissionNamingPolicy>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<PermissionNamingPolicy>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizePermissionNamingPolicyMapping(ModelBuilder modelBuilder);

        #endregion

        #region PermissionNamingPolicyHistory Mapping

        private void PermissionNamingPolicyHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PermissionNamingPolicyHistory>().HasNoKey();
            modelBuilder.Entity<PermissionNamingPolicyHistory>().ToView(@"PermissionNamingPolicyHistory", @"core");
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.LevelName).HasColumnName(@"LevelName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.LevelLength).HasColumnName(@"LevelLength").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.LevelStartPoint).HasColumnName(@"LevelStartPoint").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.LevelEndPoint).HasColumnName(@"LevelEndPoint").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.LevelIncrementBy).HasColumnName(@"LevelIncrementBy").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PermissionNamingPolicyHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizePermissionNamingPolicyHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region PhraseTag Mapping

        private void PhraseTagMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PhraseTag>().ToTable(@"PhraseTag", @"core");
            modelBuilder.Entity<PhraseTag>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTag>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTag>().Property(x => x.PhraseName).HasColumnName(@"PhraseName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTag>().Property(x => x.UsageIn).HasColumnName(@"UsageIn").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<PhraseTag>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<PhraseTag>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<PhraseTag>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTag>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTag>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<PhraseTag>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTag>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<PhraseTag>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<PhraseTag>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<PhraseTag>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizePhraseTagMapping(ModelBuilder modelBuilder);

        #endregion

        #region PhraseTagHistory Mapping

        private void PhraseTagHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PhraseTagHistory>().HasNoKey();
            modelBuilder.Entity<PhraseTagHistory>().ToView(@"PhraseTagHistory", @"core");
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.PhraseName).HasColumnName(@"PhraseName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.UsageIn).HasColumnName(@"UsageIn").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PhraseTagHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizePhraseTagHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region PhraseTagTranslation Mapping

        private void PhraseTagTranslationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PhraseTagTranslation>().ToTable(@"PhraseTagTranslation", @"core");
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.IdPhraseTag).HasColumnName(@"IdPhraseTag").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.IdLanguage).HasColumnName(@"IdLanguage").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.Expression).HasColumnName(@"Expression").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<PhraseTagTranslation>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<PhraseTagTranslation>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizePhraseTagTranslationMapping(ModelBuilder modelBuilder);

        #endregion

        #region PhraseTagTranslationHistory Mapping

        private void PhraseTagTranslationHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PhraseTagTranslationHistory>().HasNoKey();
            modelBuilder.Entity<PhraseTagTranslationHistory>().ToView(@"PhraseTagTranslationHistory", @"core");
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.IdPhraseTag).HasColumnName(@"IdPhraseTag").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.IdLanguage).HasColumnName(@"IdLanguage").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.Expression).HasColumnName(@"Expression").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PhraseTagTranslationHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizePhraseTagTranslationHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region RoleScreenLink Mapping

        private void RoleScreenLinkMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RoleScreenLink>().ToTable(@"RoleScreenLink", @"core");
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.IdRole).HasColumnName(@"IdRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.IdScreen).HasColumnName(@"IdScreen").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.AccessRight).HasColumnName(@"AccessRight").HasColumnType(@"nvarchar(4)").ValueGeneratedNever().HasMaxLength(4).HasDefaultValueSql(@"'0000'");
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<RoleScreenLink>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<RoleScreenLink>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeRoleScreenLinkMapping(ModelBuilder modelBuilder);

        #endregion

        #region RoleScreenLinkHistory Mapping

        private void RoleScreenLinkHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RoleScreenLinkHistory>().HasNoKey();
            modelBuilder.Entity<RoleScreenLinkHistory>().ToView(@"RoleScreenLinkHistory", @"core");
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.IdRole).HasColumnName(@"IdRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.IdScreen).HasColumnName(@"IdScreen").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.AccessRight).HasColumnName(@"AccessRight").HasColumnType(@"nvarchar(4)").ValueGeneratedNever().HasMaxLength(4);
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<RoleScreenLinkHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeRoleScreenLinkHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region Screen Mapping

        private void ScreenMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Screen>().ToTable(@"Screen", @"core");
            modelBuilder.Entity<Screen>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Screen>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Screen>().Property(x => x.IdSection).HasColumnName(@"IdSection").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Screen>().Property(x => x.ScreenCode).HasColumnName(@"ScreenCode").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Screen>().Property(x => x.ScreenName).HasColumnName(@"ScreenName").HasColumnType(@"nvarchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Screen>().Property(x => x.Ordinal).HasColumnName(@"Ordinal").HasColumnType(@"smallint").ValueGeneratedNever().HasPrecision(5, 0);
            modelBuilder.Entity<Screen>().Property(x => x.Uri).HasColumnName(@"Uri").HasColumnType(@"nvarchar(512)").IsRequired().ValueGeneratedNever().HasMaxLength(512);
            modelBuilder.Entity<Screen>().Property(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(512)").ValueGeneratedNever().HasMaxLength(512);
            modelBuilder.Entity<Screen>().Property(x => x.IsRequiredForApproval).HasColumnName(@"IsRequiredForApproval").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Screen>().Property(x => x.IsFinancialScreen).HasColumnName(@"IsFinancialScreen").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Screen>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Screen>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Screen>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<Screen>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Screen>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Screen>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Screen>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Screen>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Screen>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<Screen>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<Screen>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeScreenMapping(ModelBuilder modelBuilder);

        #endregion

        #region ScreenHistory Mapping

        private void ScreenHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ScreenHistory>().HasNoKey();
            modelBuilder.Entity<ScreenHistory>().ToView(@"ScreenHistory", @"core");
            modelBuilder.Entity<ScreenHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.IdSection).HasColumnName(@"IdSection").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.ScreenCode).HasColumnName(@"ScreenCode").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.ScreenName).HasColumnName(@"ScreenName").HasColumnType(@"nvarchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.Ordinal).HasColumnName(@"Ordinal").HasColumnType(@"smallint").ValueGeneratedNever().HasPrecision(5, 0);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.Uri).HasColumnName(@"Uri").HasColumnType(@"nvarchar(512)").IsRequired().ValueGeneratedNever().HasMaxLength(512);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(512)").ValueGeneratedNever().HasMaxLength(512);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.IsRequiredForApproval).HasColumnName(@"IsRequiredForApproval").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ScreenHistory>().Property(x => x.IsFinancialScreen).HasColumnName(@"IsFinancialScreen").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ScreenHistory>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ScreenHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ScreenHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ScreenHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ScreenHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ScreenHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeScreenHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region Section Mapping

        private void SectionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Section>().ToTable(@"Section", @"core");
            modelBuilder.Entity<Section>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Section>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Section>().Property(x => x.IdSubModule).HasColumnName(@"IdSubModule").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Section>().Property(x => x.SectionCode).HasColumnName(@"SectionCode").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Section>().Property(x => x.SectionName).HasColumnName(@"SectionName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Section>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Section>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Section>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<Section>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Section>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Section>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Section>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Section>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Section>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<Section>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<Section>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeSectionMapping(ModelBuilder modelBuilder);

        #endregion

        #region SectionHistory Mapping

        private void SectionHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SectionHistory>().HasNoKey();
            modelBuilder.Entity<SectionHistory>().ToView(@"SectionHistory", @"core");
            modelBuilder.Entity<SectionHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SectionHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SectionHistory>().Property(x => x.IdSubModule).HasColumnName(@"IdSubModule").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SectionHistory>().Property(x => x.SectionCode).HasColumnName(@"SectionCode").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SectionHistory>().Property(x => x.SectionName).HasColumnName(@"SectionName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SectionHistory>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SectionHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SectionHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<SectionHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SectionHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SectionHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SectionHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SectionHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<SectionHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SectionHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeSectionHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region SmtpClient Mapping

        private void SmtpClientMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SmtpClient>().ToTable(@"SmtpClient", @"core");
            modelBuilder.Entity<SmtpClient>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SmtpClient>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<SmtpClient>().Property(x => x.Server).HasColumnName(@"Server").HasColumnType(@"nvarchar(500)").IsRequired().ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<SmtpClient>().Property(x => x.Port).HasColumnName(@"Port").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SmtpClient>().Property(x => x.UseDefaultCredentials).HasColumnName(@"UseDefaultCredentials").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SmtpClient>().Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<SmtpClient>().Property(x => x.Password).HasColumnName(@"Password").HasColumnType(@"nvarchar(256)").ValueGeneratedNever().HasMaxLength(256);
            modelBuilder.Entity<SmtpClient>().Property(x => x.EnableSsl).HasColumnName(@"EnableSsl").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SmtpClient>().Property(x => x.Timeout).HasColumnName(@"Timeout").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SmtpClient>().Property(x => x.SenderMail).HasColumnName(@"SenderMail").HasColumnType(@"nvarchar(200)").IsRequired().ValueGeneratedNever().HasMaxLength(200);
            modelBuilder.Entity<SmtpClient>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<SmtpClient>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<SmtpClient>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<SmtpClient>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SmtpClient>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<SmtpClient>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SmtpClient>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<SmtpClient>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<SmtpClient>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<SmtpClient>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeSmtpClientMapping(ModelBuilder modelBuilder);

        #endregion

        #region SmtpClientHistory Mapping

        private void SmtpClientHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SmtpClientHistory>().HasNoKey();
            modelBuilder.Entity<SmtpClientHistory>().ToView(@"SmtpClientHistory", @"core");
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.Server).HasColumnName(@"Server").HasColumnType(@"nvarchar(500)").IsRequired().ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.Port).HasColumnName(@"Port").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.UseDefaultCredentials).HasColumnName(@"UseDefaultCredentials").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.Password).HasColumnName(@"Password").HasColumnType(@"nvarchar(256)").ValueGeneratedNever().HasMaxLength(256);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.EnableSsl).HasColumnName(@"EnableSsl").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.Timeout).HasColumnName(@"Timeout").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.SenderMail).HasColumnName(@"SenderMail").HasColumnType(@"nvarchar(200)").IsRequired().ValueGeneratedNever().HasMaxLength(200);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SmtpClientHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeSmtpClientHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region SubModule Mapping

        private void SubModuleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SubModule>().ToTable(@"SubModule", @"core");
            modelBuilder.Entity<SubModule>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModule>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<SubModule>().Property(x => x.IdModule).HasColumnName(@"IdModule").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModule>().Property(x => x.SubModuleCode).HasColumnName(@"SubModuleCode").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModule>().Property(x => x.SubModuleName).HasColumnName(@"SubModuleName").HasColumnType(@"nvarchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<SubModule>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModule>().Property(x => x.Ordinal).HasColumnName(@"Ordinal").HasColumnType(@"smallint").ValueGeneratedNever().HasPrecision(5, 0);
            modelBuilder.Entity<SubModule>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<SubModule>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SubModule>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModule>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModule>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SubModule>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModule>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<SubModule>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<SubModule>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<SubModule>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeSubModuleMapping(ModelBuilder modelBuilder);

        #endregion

        #region SubModuleHistory Mapping

        private void SubModuleHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SubModuleHistory>().HasNoKey();
            modelBuilder.Entity<SubModuleHistory>().ToView(@"SubModuleHistory", @"core");
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.IdModule).HasColumnName(@"IdModule").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.SubModuleCode).HasColumnName(@"SubModuleCode").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.SubModuleName).HasColumnName(@"SubModuleName").HasColumnType(@"nvarchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.Ordinal).HasColumnName(@"Ordinal").HasColumnType(@"smallint").ValueGeneratedNever().HasPrecision(5, 0);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SubModuleHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeSubModuleHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserGroup Mapping

        private void UserGroupMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserGroup>().ToTable(@"UserGroup", @"core");
            modelBuilder.Entity<UserGroup>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroup>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroup>().Property(x => x.GroupName).HasColumnName(@"GroupName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroup>().Property(x => x.GroupDescription).HasColumnName(@"GroupDescription").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UserGroup>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserGroup>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<UserGroup>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserGroup>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroup>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserGroup>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroup>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroup>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<UserGroup>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<UserGroup>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeUserGroupMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserGroupHistory Mapping

        private void UserGroupHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserGroupHistory>().HasNoKey();
            modelBuilder.Entity<UserGroupHistory>().ToView(@"UserGroupHistory", @"core");
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.GroupName).HasColumnName(@"GroupName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.GroupDescription).HasColumnName(@"GroupDescription").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserGroupHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeUserGroupHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserGroupWiseRoleMapping Mapping

        private void UserGroupWiseRoleMappingMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserGroupWiseRoleMapping>().ToTable(@"UserGroupWiseRoleMapping", @"core");
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.IdUserRole).HasColumnName(@"IdUserRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.IdUserGroup).HasColumnName(@"IdUserGroup").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<UserGroupWiseRoleMapping>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<UserGroupWiseRoleMapping>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeUserGroupWiseRoleMappingMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserGroupWiseRoleMappingHistory Mapping

        private void UserGroupWiseRoleMappingHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().HasNoKey();
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().ToView(@"UserGroupWiseRoleMappingHistory", @"core");
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.IdUserRole).HasColumnName(@"IdUserRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.IdUserGroup).HasColumnName(@"IdUserGroup").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserGroupWiseRoleMappingHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeUserGroupWiseRoleMappingHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserResource Mapping

        private void UserResourceMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserResource>().ToTable(@"UserResource", @"core");
            modelBuilder.Entity<UserResource>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserResource>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<UserResource>().Property(x => x.Url).HasColumnName(@"Url").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserResource>().Property(x => x.IdHttpMethod).HasColumnName(@"IdHttpMethod").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserResource>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserResource>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<UserResource>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserResource>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserResource>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<UserResource>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserResource>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserResource>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<UserResource>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<UserResource>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeUserResourceMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserResourceHistory Mapping

        private void UserResourceHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserResourceHistory>().HasNoKey();
            modelBuilder.Entity<UserResourceHistory>().ToView(@"UserResourceHistory", @"core");
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.Url).HasColumnName(@"Url").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.IdHttpMethod).HasColumnName(@"IdHttpMethod").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserResourceHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeUserResourceHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserRole Mapping

        private void UserRoleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserRole>().ToTable(@"UserRole", @"core");
            modelBuilder.Entity<UserRole>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRole>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<UserRole>().Property(x => x.RoleName).HasColumnName(@"RoleName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRole>().Property(x => x.RoleDescription).HasColumnName(@"RoleDescription").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UserRole>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRole>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<UserRole>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserRole>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRole>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRole>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<UserRole>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<UserRole>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeUserRoleMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserRoleHistory Mapping

        private void UserRoleHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserRoleHistory>().HasNoKey();
            modelBuilder.Entity<UserRoleHistory>().ToView(@"UserRoleHistory", @"core");
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.RoleName).HasColumnName(@"RoleName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.RoleDescription).HasColumnName(@"RoleDescription").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRoleHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeUserRoleHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserRoleWiseResourceMapping Mapping

        private void UserRoleWiseResourceMappingMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserRoleWiseResourceMapping>().ToTable(@"UserRoleWiseResourceMapping", @"core");
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.IdUserResource).HasColumnName(@"IdUserResource").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.IdUserRole).HasColumnName(@"IdUserRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getdate()");
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<UserRoleWiseResourceMapping>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<UserRoleWiseResourceMapping>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeUserRoleWiseResourceMappingMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserRoleWiseResourceMappingHistory Mapping

        private void UserRoleWiseResourceMappingHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().HasNoKey();
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().ToView(@"UserRoleWiseResourceMappingHistory", @"core");
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.IdUserResource).HasColumnName(@"IdUserResource").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.IdUserRole).HasColumnName(@"IdUserRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRoleWiseResourceMappingHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeUserRoleWiseResourceMappingHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region User Mapping

        private void UserMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<User>().ToTable(@"Users", @"core");
            modelBuilder.Entity<User>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<User>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<User>().Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property(x => x.UserFullName).HasColumnName(@"UserFullName").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<User>().Property(x => x.Email).HasColumnName(@"Email").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<User>().Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property(x => x.Password).HasColumnName(@"Password").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<User>().Property(x => x.PasswordSalt).HasColumnName(@"PasswordSalt").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<User>().Property(x => x.AccessLevel).HasColumnName(@"AccessLevel").HasColumnType(@"nvarchar(4)").ValueGeneratedNever().HasMaxLength(4);
            modelBuilder.Entity<User>().Property(x => x.IdRole).HasColumnName(@"IdRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<User>().Property(x => x.IdUserLanguage).HasColumnName(@"IdUserLanguage").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<User>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<User>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<User>().Property(x => x.IsLockedOut).HasColumnName(@"IsLockedOut").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property(x => x.IsChangePassword).HasColumnName(@"IsChangePassword").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<User>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<User>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<User>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeUserMapping(ModelBuilder modelBuilder);

        #endregion

        #region UsersHistory Mapping

        private void UsersHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UsersHistory>().HasNoKey();
            modelBuilder.Entity<UsersHistory>().ToView(@"UsersHistory", @"core");
            modelBuilder.Entity<UsersHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UsersHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UsersHistory>().Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UsersHistory>().Property(x => x.UserFullName).HasColumnName(@"UserFullName").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<UsersHistory>().Property(x => x.Email).HasColumnName(@"Email").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<UsersHistory>().Property(x => x.EmployeeId).HasColumnName(@"EmployeeId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UsersHistory>().Property(x => x.Password).HasColumnName(@"Password").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UsersHistory>().Property(x => x.PasswordSalt).HasColumnName(@"PasswordSalt").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UsersHistory>().Property(x => x.AccessLevel).HasColumnName(@"AccessLevel").HasColumnType(@"nvarchar(4)").ValueGeneratedNever().HasMaxLength(4);
            modelBuilder.Entity<UsersHistory>().Property(x => x.IdRole).HasColumnName(@"IdRole").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UsersHistory>().Property(x => x.IdUserLanguage).HasColumnName(@"IdUserLanguage").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UsersHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<UsersHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UsersHistory>().Property(x => x.IsLockedOut).HasColumnName(@"IsLockedOut").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UsersHistory>().Property(x => x.IsChangePassword).HasColumnName(@"IsChangePassword").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UsersHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UsersHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UsersHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UsersHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UsersHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UsersHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UsersHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeUsersHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserWiseGroupMapping Mapping

        private void UserWiseGroupMappingMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserWiseGroupMapping>().ToTable(@"UserWiseGroupMapping", @"core");
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.IdUserGroup).HasColumnName(@"IdUserGroup").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1).HasDefaultValueSql(@"'N'");
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"getutcdate()");
            modelBuilder.Entity<UserWiseGroupMapping>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"CONVERT([datetime2],'9999-12-31 23:59:59.9999999')");
            modelBuilder.Entity<UserWiseGroupMapping>().HasKey(@"IdClient", @"Id");
        }

        partial void CustomizeUserWiseGroupMappingMapping(ModelBuilder modelBuilder);

        #endregion

        #region UserWiseGroupMappingHistory Mapping

        private void UserWiseGroupMappingHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserWiseGroupMappingHistory>().HasNoKey();
            modelBuilder.Entity<UserWiseGroupMappingHistory>().ToView(@"UserWiseGroupMappingHistory", @"core");
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.IdClient).HasColumnName(@"IdClient").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.IdUserGroup).HasColumnName(@"IdUserGroup").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.LastAction).HasColumnName(@"LastAction").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.IdAuthorizationStatus).HasColumnName(@"IdAuthorizationStatus").HasColumnType(@"nvarchar(1)").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.MakeBy).HasColumnName(@"MakeBy").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.MakeDate).HasColumnName(@"MakeDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserWiseGroupMappingHistory>().Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
        }

        partial void CustomizeUserWiseGroupMappingHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AppClient>().HasMany(x => x.ClientCompanies).WithOne(op => op.AppClient).HasForeignKey(@"IdAppClient").IsRequired(true);

            modelBuilder.Entity<BaseLanguage>().HasMany(x => x.PhraseTagTranslations).WithOne(op => op.BaseLanguage).HasForeignKey(@"IdClient", @"IdLanguage").IsRequired(true);
            modelBuilder.Entity<BaseLanguage>().HasMany(x => x.Users).WithOne(op => op.BaseLanguage).HasForeignKey(@"IdClient", @"IdUserLanguage").IsRequired(true);

            modelBuilder.Entity<ClientCompany>().HasOne(x => x.AppClient).WithMany(op => op.ClientCompanies).HasForeignKey(@"IdAppClient").IsRequired(true);

            modelBuilder.Entity<HttpMethod>().HasMany(x => x.UserResources).WithOne(op => op.HttpMethod).HasForeignKey(@"IdClient", @"IdHttpMethod").IsRequired(true);

            modelBuilder.Entity<Module>().HasMany(x => x.SubModules).WithOne(op => op.Module).HasForeignKey(@"IdClient", @"IdModule").IsRequired(true);

            modelBuilder.Entity<PhraseTag>().HasMany(x => x.PhraseTagTranslations).WithOne(op => op.PhraseTag).HasForeignKey(@"IdClient", @"IdPhraseTag").IsRequired(true);

            modelBuilder.Entity<PhraseTagTranslation>().HasOne(x => x.PhraseTag).WithMany(op => op.PhraseTagTranslations).HasForeignKey(@"IdClient", @"IdPhraseTag").IsRequired(true);
            modelBuilder.Entity<PhraseTagTranslation>().HasOne(x => x.BaseLanguage).WithMany(op => op.PhraseTagTranslations).HasForeignKey(@"IdClient", @"IdLanguage").IsRequired(true);

            modelBuilder.Entity<Screen>().HasOne(x => x.Section).WithMany(op => op.Screens).HasForeignKey(@"IdClient", @"IdSection").IsRequired(true);

            modelBuilder.Entity<Section>().HasMany(x => x.Screens).WithOne(op => op.Section).HasForeignKey(@"IdClient", @"IdSection").IsRequired(true);
            modelBuilder.Entity<Section>().HasOne(x => x.SubModule).WithMany(op => op.Sections).HasForeignKey(@"IdClient", @"IdSubModule").IsRequired(true);

            modelBuilder.Entity<SubModule>().HasMany(x => x.Sections).WithOne(op => op.SubModule).HasForeignKey(@"IdClient", @"IdSubModule").IsRequired(true);
            modelBuilder.Entity<SubModule>().HasOne(x => x.Module).WithMany(op => op.SubModules).HasForeignKey(@"IdClient", @"IdModule").IsRequired(true);

            modelBuilder.Entity<UserGroup>().HasMany(x => x.UserGroupWiseRoleMappings).WithOne(op => op.UserGroup).HasForeignKey(@"IdClient", @"IdUserGroup").IsRequired(true);
            modelBuilder.Entity<UserGroup>().HasMany(x => x.UserWiseGroupMappings).WithOne(op => op.UserGroup).HasForeignKey(@"IdClient", @"IdUserGroup").IsRequired(true);

            modelBuilder.Entity<UserGroupWiseRoleMapping>().HasOne(x => x.UserRole).WithMany(op => op.UserGroupWiseRoleMappings).HasForeignKey(@"IdClient", @"IdUserRole").IsRequired(true);
            modelBuilder.Entity<UserGroupWiseRoleMapping>().HasOne(x => x.UserGroup).WithMany(op => op.UserGroupWiseRoleMappings).HasForeignKey(@"IdClient", @"IdUserGroup").IsRequired(true);

            modelBuilder.Entity<UserResource>().HasOne(x => x.HttpMethod).WithMany(op => op.UserResources).HasForeignKey(@"IdClient", @"IdHttpMethod").IsRequired(true);
            modelBuilder.Entity<UserResource>().HasMany(x => x.UserRoleWiseResourceMappings).WithOne(op => op.UserResource).HasForeignKey(@"IdClient", @"IdUserResource").IsRequired(true);

            modelBuilder.Entity<UserRole>().HasMany(x => x.UserGroupWiseRoleMappings).WithOne(op => op.UserRole).HasForeignKey(@"IdClient", @"IdUserRole").IsRequired(true);
            modelBuilder.Entity<UserRole>().HasMany(x => x.UserRoleWiseResourceMappings).WithOne(op => op.UserRole).HasForeignKey(@"IdClient", @"IdUserRole").IsRequired(true);
            modelBuilder.Entity<UserRole>().HasMany(x => x.Users).WithOne(op => op.UserRole).HasForeignKey(@"IdClient", @"IdRole").IsRequired(true);

            modelBuilder.Entity<UserRoleWiseResourceMapping>().HasOne(x => x.UserResource).WithMany(op => op.UserRoleWiseResourceMappings).HasForeignKey(@"IdClient", @"IdUserResource").IsRequired(true);
            modelBuilder.Entity<UserRoleWiseResourceMapping>().HasOne(x => x.UserRole).WithMany(op => op.UserRoleWiseResourceMappings).HasForeignKey(@"IdClient", @"IdUserRole").IsRequired(true);

            modelBuilder.Entity<User>().HasOne(x => x.UserRole).WithMany(op => op.Users).HasForeignKey(@"IdClient", @"IdRole").IsRequired(true);
            modelBuilder.Entity<User>().HasOne(x => x.BaseLanguage).WithMany(op => op.Users).HasForeignKey(@"IdClient", @"IdUserLanguage").IsRequired(true);
            modelBuilder.Entity<User>().HasMany(x => x.UserWiseGroupMappings).WithOne(op => op.User).HasForeignKey(@"IdClient", @"IdUser").IsRequired(true);

            modelBuilder.Entity<UserWiseGroupMapping>().HasOne(x => x.User).WithMany(op => op.UserWiseGroupMappings).HasForeignKey(@"IdClient", @"IdUser").IsRequired(true);
            modelBuilder.Entity<UserWiseGroupMapping>().HasOne(x => x.UserGroup).WithMany(op => op.UserWiseGroupMappings).HasForeignKey(@"IdClient", @"IdUserGroup").IsRequired(true);
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
